using UnityEngine;

//Class to manage all in-game logic
public class _GameManager : MonoBehaviour {
    //Global instance reference
    public static _GameManager Instance;

    //In-game variables
    private Camera mainCamera;
    private IDraggable hElement;
    private IDraggable sElement;
    public LayerMask dragArea;
    public Vector3 clickOffset;
    public Vector3 prevMousePos;
    public float dragThreshold = 0.1f;


    private void Awake() {
        //Making a single referencce to gamemanager
        if (!Instance) {
            Instance = this;
        } else {
            Destroy(gameObject);
        }

        //Storing camera reference
        mainCamera = Camera.main;
    }

    private void Update() {
        Ray ray = mainCamera.ScreenPointToRay(Input.mousePosition);
        if (Physics.Raycast(ray, out RaycastHit hit, 32.0f, dragArea)) {
            Vector3 mousePosition = hit.point;
            Vector3 newPosition = mousePosition - clickOffset;

            //Moving element while dragging
            if (sElement != null && sElement.IsDragged && Input.GetMouseButton(0)) {
                newPosition.y = 0.5f;
                sElement.OnDragStay(newPosition);
            }

            //Checking for draggable elements
            if (hit.collider.TryGetComponent<IDraggable>(out var draggable)) {
                //Hovering
                if (hElement != draggable) {
                    //Unhovering
                    if (hElement != null) {
                        hElement.OnHoverEnd();
                        Debug.Log("unhober");
                    }

                    hElement = draggable;
                    hElement.OnHoverBegin();
                }

                //Clicking
                if (Input.GetMouseButtonDown(0)) {
                    sElement = draggable;
                    sElement.OnClickBegin();
                    prevMousePos = hit.point;
                    clickOffset = prevMousePos - hit.collider.transform.position;
                //Dragging
                } else if (Input.GetMouseButton(0) && sElement == draggable) {
                    //Checking if mouse was moved
                    if (!sElement.IsDragged && Vector3.Distance(prevMousePos, mousePosition) >= dragThreshold) {
                        sElement.OnDragBegin();
                    }
                //Undragging && Unhovering
                } else if (Input.GetMouseButtonUp(0) && sElement == draggable) {
                    if (sElement.IsDragged) {
                        sElement.OnDragEnd();
                    }
                    if (sElement != null) sElement.OnClickEnd();
                    sElement = null;
                }
            }
        //Unhovering when out of any draggable element
        } else {
            if (hElement != null) {
                hElement.OnHoverEnd();
                hElement = null;
            }
        }
    }

    public void SelectObject(IDraggable icon) {
        if (sElement != null && sElement != icon) {
            DeselectElement(icon);
        }

        sElement = icon;
    }

    public void DeselectElement(IDraggable icon) {
        if (sElement == icon) {
            sElement = null;
        }
    }
}